[project]
name = "salesforce-to-s3"
version = "0.1.0"
description = "Utility to export SObjects from Salesforce and write them as parquet files to S3"
readme = "README.md"
authors = [
    { name = "Callaway Cloud", email = "support@callawaycloud.com" }
]
requires-python = ">=3.9"
dependencies = [
    "boto3>=1.34.0",
    "pandas>=2.0.0", 
    "pyarrow>=14.0.0",
    "simple-salesforce>=1.12.0",
    "click>=8.1.0",
    "pydantic>=2.0.0",
]
keywords = ["salesforce", "s3", "parquet", "data-export"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/callawaycloud/salesforce-to-s3"
Repository = "https://github.com/callawaycloud/salesforce-to-s3"
Issues = "https://github.com/callawaycloud/salesforce-to-s3/issues"

[project.scripts]
salesforce-to-s3 = "salesforce_to_s3.cli:main"

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.8.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.6.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "types-boto3",
    "pandas-stubs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/salesforce_to_s3"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-argument
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.isort]
known-first-party = ["salesforce_to_s3"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=salesforce_to_s3 --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
